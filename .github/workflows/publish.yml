name: Publish Library

on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clona el repositorio con historial completo y tags
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          clean: true

      # 2Ô∏è‚É£ Configura Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com/'
          always-auth: true

      # 3Ô∏è‚É£ Autenticaci√≥n para publicar
      - name: Authenticate with GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "@forever-twenty-nine:registry=https://npm.pkg.github.com" >> ~/.npmrc

      # 4Ô∏è‚É£ Instala dependencias
      - name: Install dependencies
        run: npm install

      # 5Ô∏è‚É£ Compila la librer√≠a
      - name: Build the library
        run: npm run build

      # 6Ô∏è‚É£ Configura identidad de Git
      - name: Configure Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 7Ô∏è‚É£ Verifica si hay cambios relevantes (convencionales) y genera el release
      - name: Bump version and generate changelog
        id: versioning
        run: |
          npx standard-version || echo "no changes"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8Ô∏è‚É£ Extrae versi√≥n actual para validar si se gener√≥ un release
      - name: Check if tag was created
        id: check_tag
        run: |
          git fetch --tags --force
          VERSION="v$(node -p "require('./package.json').version")"
          echo "üì¶ Current version: $VERSION"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "‚úÖ Tag $VERSION exists. Will publish."
            echo "should_publish=true" >> $GITHUB_OUTPUT
          else
            echo "üõë Tag $VERSION was not created. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

      # 9Ô∏è‚É£ Publica en GitHub Packages si hubo release
      - name: Publish to GitHub Packages
        if: steps.check_tag.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # üîü Empuja cambios y tags al repositorio
      - name: Push version and tags
        if: steps.check_tag.outputs.should_publish == 'true'
        run: |
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main --follow-tags

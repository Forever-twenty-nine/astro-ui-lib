name: Publish Library

# üöÄ 0. Dispara el workflow cuando hay un push a la rama main
on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clona el repositorio con todo el historial y los tags
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          clean: true

      # 2Ô∏è‚É£ Configura Node.js con acceso al registro de GitHub Packages
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com/'
          always-auth: true

      # 3Ô∏è‚É£ Crea el archivo .npmrc para autenticarse con el token
      - name: Authenticate with GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "@forever-twenty-nine:registry=https://npm.pkg.github.com" >> ~/.npmrc

      # 4Ô∏è‚É£ Instala dependencias
      - name: Install dependencies
        run: npm install

      # 5Ô∏è‚É£ Compila la librer√≠a (usa tu script personalizado)
      - name: Build the library
        run: npm run build

      # 6Ô∏è‚É£ Configura la identidad de Git (necesario para commitear y pushear)
      - name: Configure Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 7Ô∏è‚É£ Bump de versi√≥n, generaci√≥n de changelog y creaci√≥n del tag
      - name: Bump version and generate changelog
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 8Ô∏è‚É£ Verifica si el nuevo tag ya existe (por si hubo errores anteriores)
      - name: Check if tag already exists
        id: check_tag
        run: |
          git fetch --tags --force
          VERSION="v$(node -p "require('./package.json').version")"
          echo "üì¶ Current version: $VERSION"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "üõë Tag $VERSION already exists. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "‚úÖ Tag does not exist yet. Will publish."
          echo "should_publish=true" >> $GITHUB_OUTPUT

      # 9Ô∏è‚É£ Publica la librer√≠a en GitHub Packages
      - name: Publish to GitHub Packages
        if: steps.check_tag.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # üîü Pushea los commits del bump y el changelog, junto con el tag
      - name: Push version and tags
        if: steps.check_tag.outputs.should_publish == 'true'
        run: |
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main --follow-tags

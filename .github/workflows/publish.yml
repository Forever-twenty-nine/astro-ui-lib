name: Publish Library

on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest

    steps:
      # 🧾 1. Clona el repositorio con historial y tags completos
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          clean: true

      # 🧱 2. Configura Node.js y el registro de GitHub Packages
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com/'
          always-auth: true

      # 🔐 3. Autenticación para publicar
      - name: Authenticate with GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "@forever-twenty-nine:registry=https://npm.pkg.github.com" >> ~/.npmrc

      # 📦 4. Instala dependencias
      - name: Install dependencies
        run: npm install

      # 🛠️ 5. Compila la librería
      - name: Build the library
        run: npm run build

      # 🧑‍💻 6. Configura identidad Git
      - name: Configure Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 🔍 7. Verifica si la nueva versión ya fue publicada
      - name: Check if tag already exists
        id: check_tag
        run: |
          git fetch --tags --force
          VERSION="v$(node -p "require('./package.json').version")"
          echo "📦 Current version: $VERSION"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "🛑 Tag $VERSION already exists. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "✅ Tag does not exist yet. Will publish."
          echo "should_publish=true" >> $GITHUB_OUTPUT

      # 🏷️ 8. Genera changelog y bump de versión
      - name: Bump version and generate changelog
        if: steps.check_tag.outputs.should_publish == 'true'
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 🚀 09. Publica a GitHub Packages
      - name: Publish to GitHub Packages
        if: steps.check_tag.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 🔁 10. Empuja los cambios al repositorio remoto
      - name: Push version and tags
        if: steps.check_tag.outputs.should_publish == 'true'
        run: |
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main --follow-tags

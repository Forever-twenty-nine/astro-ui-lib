name: Publish Library

on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com/'
          always-auth: true

      - name: Authenticate with GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "@forever-twenty-nine:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Install dependencies
        run: npm install

      - name: Build the library
        run: npm run build

      - name: Configure Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if current version is already published
        id: check_version
        run: |
          VERSION="v$(node -p "require('./package.json').version")"
          echo "ðŸ“¦ Current version: $VERSION"
          git fetch --tags
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "ðŸ›‘ Tag $VERSION already exists. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "âœ… Tag $VERSION not found. Continuing..."
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Check for conventional commits
        if: steps.check_version.outputs.should_publish == 'true'
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")
          COMMITS=$(git log "$LATEST_TAG"..HEAD --pretty=format:"%s" || true)
          echo "Commits since $LATEST_TAG:"
          echo "$COMMITS"
          if ! echo "$COMMITS" | grep -qE "^(feat|fix|chore|docs|refactor|style|test|perf)\:"; then
            echo "ðŸ›‘ No conventional commits found. Skipping release."
            exit 0
          fi

      - name: Bump version and generate changelog
        if: steps.check_version.outputs.should_publish == 'true'
        run: npx standard-version
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GitHub Packages
        if: steps.check_version.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version and tags
        if: steps.check_version.outputs.should_publish == 'true'
        run: |
          git push https://x-access-token:${{ secrets.NPM_TOKEN }}@github.com/Forever-twenty-nine/astro-ui-lib.git HEAD:main --follow-tags

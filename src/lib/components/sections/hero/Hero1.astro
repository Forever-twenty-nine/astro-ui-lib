---
import Typography from "../../ui/Typography.astro";
import Container from "../../elements/Container.astro";
import Section from "../../elements/Section.astro";
import Button from "../../ui/Button.astro";
import { Image } from "astro:assets";
import type { HeroProps } from "../../../types/sections/HeroProps";
import fallbackHero1 from "../../../assets/hero/800x500.webp";
import type { AnimationLevel } from "../../../types/Shared";

const {
  sectionId,
  sectionClass = "",
  containerId,
  containerClass = "",
  title = "Hero1: layout con imagen a la derecha",
  titleClass = "",
  description = "Este componente muestra un título, una descripción y un botón, acompañado de una imagen alineada a la derecha. Ideal para destacar un mensaje principal.",
  descriptionClass = "",
  buttonType = "button",
  buttonHref = "#",
  buttonText = "Este es un botón de ejemplo",
  image,
  imageAlt = "Imagen por defecto de Hero1",
  animationLevel,
} = Astro.props as HeroProps;

const resolvedAnimationLevel: AnimationLevel = animationLevel ?? "none";

const textAnim =
  resolvedAnimationLevel === "fancy"
    ? "motion-safe:animate-fade-down md:motion-safe:animate-fade-right motion-safe:animate-duration-[3000ms] transition-all duration-300 ease-in-out hover:scale-105"
    : resolvedAnimationLevel === "basic"
      ? "transition-all duration-300 ease-in-out hover:scale-105"
      : "";

const imageAnim =
  resolvedAnimationLevel === "fancy"
    ? "motion-safe:animate-fade-up md:motion-safe:animate-fade-left motion-safe:animate-duration-[3000ms] transition-transform duration-300 hover:scale-105"
    : resolvedAnimationLevel === "basic"
      ? "transition-transform duration-300 hover:scale-105"
      : "";
---

<Section
  id={sectionId}
  class={`bg-gradient-to-br from-secondary-700 via-secondary-800 to-secondary-900 ${sectionClass}`}
>
  <Container id={containerId} class={containerClass}>
    <div class="flex flex-col md:flex-row items-center justify-between gap-12">
      <!-- Texto -->
      <div
        class={`md:w-1/2 w-full text-center md:text-left max-w-xl mx-auto ${textAnim}`}
      >
        {
          title && (
            <Typography
              tag="h1"
              class={`mb-6 text-white drop-shadow-md ${titleClass}`}
            >
              {title}
            </Typography>
          )
        }

        {
          description && (
            <Typography
              class={`mb-8 text-info-200 opacity-90 ${descriptionClass}`}
            >
              {description}
            </Typography>
          )
        }

        {
          buttonText && (
            <Button
              type={buttonType}
              href={buttonHref}
              class="transition duration-300 ease-in-out hover:scale-105"
            >
              {buttonText}
            </Button>
          )
        }
      </div>
      <!-- Imagen -->
      <div class={`md:w-1/2 w-full ${imageAnim}`}>
        <Image
          src={image ?? fallbackHero1}
          alt={imageAlt}
          width={800}
          height={500}
          class="w-full rounded-xl shadow-lg"
          loading="eager"
          decoding="async"
        />
      </div>
    </div>
  </Container>
</Section>

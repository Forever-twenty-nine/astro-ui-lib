---
// import { config } from "config"
import Overlay from "../ui/Overlay.astro"
import Container from "../elements/Container.astro"
import BrandLink from "../ui/BrandLink.astro"
import Nav from "../elements/Nav.astro"

const {
  id: idName = '',
  class: className = '',
  navLinks = [],
  brand = {} 
} = Astro.props

---

<header
  id={idName || undefined}
  class={`fixed top-0 left-0 w-full shadow-md py-2 bg-white z-30  ${className}`}
>
  
    <Container class="flex justify-between items-center">
    
        <BrandLink
            hrefLink={brand.href || "#"}
            idLink={brand.id || undefined}
            classLink={brand.class || ""}
            brandSrc={brand.src}
            brandAlt={brand.alt}
            classImage={brand.classImage}
        />
        
        <button 
            id="menu-toggle"
            class="w-14 h-14 p-4 cursor-pointer z-30 md:!hidden flex items-center justify-center"
            aria-expanded="false"
        >
            <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                <path d="M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z"/>
            </svg>
        </button>

        <Nav 
            id="nav-menu"
            class=""
            links={navLinks} 
        />
    
  </Container>
  <Overlay/>
</header>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const menuToggle = document.getElementById("menu-toggle");
        const navMenu = document.getElementById("nav-menu");
        const menuOverlay = document.getElementById("menu-overlay");

        const openMenu = () => {
            if (navMenu) {
                navMenu.classList.remove("translate-x-full");
            }
            if (navMenu) {
                navMenu.classList.add("translate-x-0");
            }
            if (menuToggle) {
                menuToggle.setAttribute("aria-expanded", "true");
            }
            if (menuOverlay) {
                menuOverlay.classList.remove("opacity-0", "pointer-events-none");
                menuOverlay.classList.add("opacity-60");
            }
        };

        const closeMenu = () => {
            if (navMenu) {
                navMenu.classList.remove("translate-x-0");
            }
            if (navMenu) {
                navMenu.classList.add("translate-x-full");
            }
            if (menuToggle) {
                menuToggle.setAttribute("aria-expanded", "false");
            }
            if (menuOverlay) {
                menuOverlay.classList.add("opacity-0", "pointer-events-none");
                menuOverlay.classList.remove("opacity-60");
            }
        };
  
        if (menuToggle && navMenu) {
            menuToggle.addEventListener("click", () => {
                const isOpen = navMenu.classList.contains("translate-x-0");
                isOpen ? closeMenu() : openMenu();
            });

            const links = navMenu.querySelectorAll("a");
            links.forEach(link => {
                link.addEventListener("click", () => {
          
                    if (window.matchMedia("(max-width: 768px)").matches) {
                        closeMenu();
                    }
                });
            });
            if (menuOverlay) {
                menuOverlay.addEventListener("click", closeMenu);
            }
        }
    });
  </script>
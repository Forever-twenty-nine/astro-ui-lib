---
import Typography from "../../ui/Typography.astro";
import Container from "../../elements/Container.astro";
import Section from "../../elements/Section.astro";
import Button from "../../ui/Button.astro";
import { Image as AstroImage } from "astro:assets";
import type { Hero2Props } from "../../types/Hero2Props";
import fallbackHero2 from "../../assets/600x400.webp";

const {
  sectionId,
  sectionClass = "",
  containerId,
  containerClass = "",
  title = "Hero2: layout centrado con doble botón",
  titleClass = "",
  description = "Este componente incluye una imagen centrada arriba, seguida de un título, una descripción y dos botones. Es útil para llamadas a la acción destacadas.",
  descriptionClass = "",
  primaryButtonText = "Botón primario de ejemplo",
  primaryButtonHref = "#",
  secondaryButtonText = "Botón secundario de ejemplo",
  secondaryButtonHref = "#",
  image,
  imageAlt = "Imagen por defecto de Hero2",
  imageClass = "",
} = Astro.props as Hero2Props;
---

<Section id={sectionId} class={`text-center ${sectionClass}`}>
  <Container id={containerId} class={containerClass}>
    <AstroImage
      src={image ?? fallbackHero2}
      alt={imageAlt}
      width={600}
      height={400}
      class={`mx-auto mb-6 rounded-xl shadow-lg transition-transform duration-300 hover:scale-105 ${imageClass}`}
      loading="eager"
      decoding="async"
    />

    <div class="max-w-xl mx-auto">
      {title && (
        <Typography
          tag="h2"
          class={`text-3xl font-bold mb-4 drop-shadow-md ${titleClass}`}
        >
          {title}
        </Typography>
      )}

      {description && (
        <Typography
          tag="p"
          class={`text-gray-600 mb-6 opacity-90 ${descriptionClass}`}
        >
          {description}
        </Typography>
      )}

      <div class="flex flex-col sm:flex-row justify-center gap-4">
        {primaryButtonText && (
          <Button
            href={primaryButtonHref}
            type="solid"
            class="transition duration-300 ease-in-out hover:scale-105"
          >
            {primaryButtonText}
          </Button>
        )}
        {secondaryButtonText && (
          <Button
            href={secondaryButtonHref}
            type="outline"
            class="transition duration-300 ease-in-out hover:scale-105"
          >
            {secondaryButtonText}
          </Button>
        )}
      </div>
    </div>
  </Container>
</Section>

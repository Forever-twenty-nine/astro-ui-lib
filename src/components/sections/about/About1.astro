---
import Typography from "../../ui/Typography.astro";
import Container from "../../elements/Container.astro";
import Section from "../../elements/Section.astro";
import { Image } from "astro:assets";
import fallbackAbout from "../../assets/about/600x500.webp";
import type { AboutProps } from "../../types/AboutProps";

const {
  sectionId,
  sectionClass = "",
  containerId,
  containerClass = "",
  tagTitle = "Sobre Nosotros",
  tagClass = "",
  title = "Conocé nuestra librería de componentes",
  titleClass = "",
  image,
  imageAlt = "Imagen por defecto de sección",
  imageClass = "",
  paragraphs = [
    {
      tag: "p",
      content: "Esta sección describe tu producto, servicio o equipo de trabajo.",
      class: "text-gray-600 mb-4",
    },
    {
      tag: "small",
      content: "Podés personalizar los textos desde las props del componente.",
      class: "text-gray-500",
    },
  ],
} = Astro.props as AboutProps;


const allowedTags = ["h1", "h2", "h3", "h4", "h5", "h6", "p", "small"];
---

<Section id={sectionId} class={sectionClass}>
    <Container id={containerId} class={containerClass}>
        <div
            class="flex flex-col-reverse md:flex-row items-center justify-between gap-12"
        >
            <!-- Imagen -->
            <div class="md:w-1/2">
                <Image
                    src={image ?? fallbackAbout}
                    alt={imageAlt}
                    width={600}
                    height={500}
                    class={`w-full rounded-xl shadow-lg ${imageClass}`}
                    loading="eager"
                    decoding="async"
                    inferSize
                />
            </div>

            <!-- Contenido -->
            <div class="md:w-1/2 text-center md:text-left">
                {
                    tagTitle && (
                        <Typography
                            tag="small"
                            class={`uppercase text-blue-600 tracking-widest font-bold mb-2 ${tagClass}`}
                        >
                            {tagTitle}
                        </Typography>
                    )
                }

                {
                    title && (
                        <Typography tag="h2" class={`mb-6 ${titleClass}`}>
                            {title}
                        </Typography>
                    )
                }

                {
                    paragraphs.map(
                        ({ tag = "p", content, class: paragraphClass }) => {
                            const safeTag = allowedTags.includes(tag)
                                ? tag
                                : "p";
                            return (
                                <Typography
                                    tag={safeTag as any}
                                    class={`text-gray-600 mb-4 ${paragraphClass ?? ""}`}
                                    set:html={content}
                                />
                            );
                        },
                    )
                }
            </div>
        </div>
    </Container>
</Section>
